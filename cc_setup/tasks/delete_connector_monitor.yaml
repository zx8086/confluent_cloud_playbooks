  
- name: Create Search Parameters For jmesquery Query
  ansible.builtin.set_fact:
    # jmesquery: "[*].{id: id}"
    jmesquery: "[*].{id: id, name: name}"

- name: Debug Variable - jmesquery
  ansible.builtin.debug:
    var: jmesquery
  when: debug_variables | bool

# - name: Delete Kafka Connector Monitor via API
#   ansible.builtin.uri:
#     url: "{{ FLEET_API_URL }}/package_policies/{{packagePolicyId}}"
#     method: POST
#     body_format: json
#     body: "{{ json_body }}"
#     timeout: 90
#     headers:
#       Authorization: "{{ FLEET_API_TOKEN }}"
#       kbn-xsrf: "kbn-xsrf"
#     follow_redirects: yes
#     force: true
#     status_code: [200, 201]
#     return_content: yes
#   register: get_kafka_connector_monitor_list
#   ignore_errors: yes


# - name: Filter JSON Response With json_query
#   ansible.builtin.set_fact:
#     delete_webhooks: "{{ get_webhooks.json | json_query(jmesquery) }}" 

# - name: Debug Variable - json_body
#   ansible.builtin.debug:
#     var: json_body

# - name: Delete Kafka Connector Fleet-Managed Monitor
#   block:

#     - name: Delete Kafka Connector Monitor via API
#       ansible.builtin.uri:
#         url: "{{ FLEET_API_URL }}/package_policies/{{packagePolicyId}}"
#         method: POST
#         body_format: json
#         body: "{{ json_body }}"
#         timeout: 90
#         headers:
#           Authorization: "{{ FLEET_API_TOKEN }}"
#           kbn-xsrf: "kbn-xsrf"
#         follow_redirects: yes
#         force: true
#         status_code: [200, 201]
#         return_content: yes
#       register: deleted_kafka_connector_monitor
#       ignore_errors: yes

#     - name: Debug Variable - Deleted Kafka Connector Monitor
#       ansible.builtin.debug:
#         var: deleted_kafka_connector_monitor


